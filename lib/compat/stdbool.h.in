/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_STDBOOL_H
#define COMPAT_STDBOOL_H

#if @HAVE_STDBOOL_H@
#  if @HAVE_INCLUDE_NEXT@
#    include_next <stdbool.h>
#  else
#    include "@STDBOOL_H_PATH@"
#  endif
#endif

/* Define the '_Bool' type which promotes to 'int' or 'unsigned int'. */
#if !@HAVE_C99_BOOL@ && !@HAVE__BOOL@
#  undef true
#  undef false
typedef enum
{
  false = 0,
  true = 1
} _Bool;
#endif

/* Define the 'bool' type. */
#if !@HAVE_C23_BOOL@ && !defined(bool)
#  define bool _Bool
#endif

/* Define 'true' to be equivalent to 1. */
#ifndef true
#  define true 1
#elif true != 1
#  undef true
#  define true 1
#endif

/* Define 'false' to be equivalent to 0. */
#ifndef false
#  define false 0
#elif false != 0
#  undef false
#  define false 0
#endif

#ifndef __bool_true_false_are_defined
#  define __bool_true_false_are_defined 1
#elif __bool_true_false_are_defined != 1
#  undef __bool_true_false_are_defined
#  define __bool_true_false_are_defined 1
#endif

#endif /* COMPAT_STDBOOL_H */
