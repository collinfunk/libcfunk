/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_SYS_WAIT_H
#define COMPAT_SYS_WAIT_H

#ifdef __GNUC__
#  pragma GCC system_header
#endif

#if @HAVE_SYS_WAIT_H@
#  if @HAVE_INCLUDE_NEXT@
#    include_next <sys/wait.h>
#  else
#    include "@SYS_WAIT_H_PATH@"
#  endif
#endif

#include <sys/types.h>
#include <signal.h>

#if !@HAVE_IDTYPE_T@
typedef enum
{
  P_ALL,
  P_PGID,
  P_PID,
} idtype_t;
#endif

/* Windows only supports the 6 ISO C99 signals. By default all exit with a
   status code of 3. For WTERMSIG, we just return SIGTERM which should be
   good enough. */
#if @HAVE_WINDOWS_H@
#  ifndef WCOREFLAG
#    define WCOREFLAG (0)
#  endif
#  ifndef WEXITSTATUS
#    define WEXITSTATUS(x) (x)
#  endif
#  ifndef WIFCONTINUED
/* TODO: XSI extension. */
#  endif
#  ifndef WIFEXITED
#    define WIFEXITED(x) ((x) != 3)
#  endif
#  ifndef WIFSIGNALED
#    define WIFSIGNALED(x) ((x) == 3)
#  endif
#  ifndef WIFSTOPPED
#    define WIFSTOPPED(x) (0)
#  endif
#  ifndef WSTOPSIG
#    define WSTOPSIG(x) (0)
#  endif
#  ifndef WTERMSIG
#    define WTERMSIG(x) (SIGTERM)
#  endif
#  ifndef WCOREDUMP
#    define WCOREDUMP(x) (0)
#  endif
#else
#  ifndef WCOREFLAG
#    define WCOREFLAG 0x80
#  endif
#  ifndef WEXITSTATUS
#    define WEXITSTATUS(x) (((x) >> 8) & 0xff)
#  endif
#  ifndef WIFCONTINUED
/* TODO: XSI extension. */
#  endif
#  ifndef WIFEXITED
#    define WIFEXITED(x) (WTERMSIG (x) == 0)
#  endif
#  ifndef WIFSIGNALED
#    define WIFSIGNALED(x) (WTERMSIG (x) != 0x7f && WTERMSIG (x) != 0)
#  endif
#  ifndef WIFSTOPPED
#    define WIFSTOPPED(x) (WTERMSIG (x) == 0x7f)
#  endif
#  ifndef WSTOPSIG
#    define WSTOPSIG(x) (((x) >> 8) & 0x7f)
#  endif
#  ifndef WTERMSIG
#    define WTERMSIG(x) ((x) & 0x7f)
#  endif
#  ifndef WCOREDUMP
#    define WCOREDUMP(x) ((x) & WCOREFLAG)
#  endif
#endif

#if @LIBCFUNK_DECLARE_WAITPID@
#  if !@HAVE_WAITPID@
extern pid_t waitpid (pid_t pid, int *stat_loc, int options);
#  endif
#endif

#endif /* COMPAT_SYS_WAIT_H */
