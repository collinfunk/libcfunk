/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_PTY_H
#define COMPAT_PTY_H

#ifdef __GNUC__
#  pragma GCC system_header
#endif

#if @HAVE_PTY_H@
#  include_next <pty.h>
#endif

#if @HAVE_LIBUTIL_H@
#  include <libutil.h>
#endif

#if @HAVE_UTIL_H@
#  include <util.h>
#endif

#include <sys/types.h>
#include <sys/ioctl.h>

#include <termios.h>

#if @LIBCFUNK_DECLARE_FORKPTY@
#  if @LIBCFUNK_REPLACE_FORKPTY@
#    undef forkpty
#    define forkpty _libcfunk_forkpty
extern pid_t _libcfunk_forkpty (int *amaster, char *name,
                                const struct termios *termp,
                                const struct winsize *winp);
#  elif !@HAVE_FORKPTY@
extern pid_t forkpty (int *amaster, char *name, const struct termios *termp,
                      const struct winsize *winp);
#  endif
#endif

#if @LIBCFUNK_DECLARE_OPENPTY@
#  if @LIBCFUNK_REPLACE_OPENPTY@
#    undef openpty
#    define openpty _libcfunk_openpty
extern int _libcfunk_openpty (int *amaster, int *aslave, char *name,
                              const struct termios *termp,
                              const struct winsize *winp);
#  elif !@HAVE_OPENPTY@
extern int openpty (int *amaster, int *aslave, char *name,
                    const struct termios *termp, const struct winsize *winp);
#  endif
#endif

#endif /* COMPAT_PTY_H */
