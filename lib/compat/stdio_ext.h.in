/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_STDIO_EXT_H
#define COMPAT_STDIO_EXT_H

#ifdef __GNUC__
#  pragma GCC system_header
#endif

#if @HAVE_STDIO_EXT_H@
#  if @HAVE_INCLUDE_NEXT@
#    include_next <stdio_ext.h>
#  else
#    include "@STDIO_EXT_H_PATH@"
#  endif
#endif

#if @HAVE_STDIO_H@
#  include <stdio.h>
#endif

/* These functions are used to access information from 'FILE' types. There
   is not way to do this portably so these functions must be implemented for
   each specific implementation of libc. To port these functions to new systems
   you should open 'stdio.h' and find  the definition of 'FILE'. Then add
   proper CMake checks and implement each function. */

#if @LIBCFUNK_DECLARE___FBUFSIZE@
#  if !@HAVE___FBUFSIZE@
extern size_t __fbufsize (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FPURGE@
#  if !@HAVE___FPURGE@
extern void __fpurge (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FSETERR@
#  if !@HAVE___FSETERR@
extern void __fseterr (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FLBF@
#  if !@HAVE___FLBF@
extern int __flbf (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FPENDING@
#  if !@HAVE___FPENDING@
extern size_t __fpending (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FREADABLE@
#  if !@HAVE___FREADABLE@
extern int __freadable (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FWRITABLE@
#  if !@HAVE___FWRITABLE@
extern int __fwritable (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FREADING@
#  if !@HAVE___FREADING@
extern int __freading (FILE *stream);
#  endif
#endif

#if @LIBCFUNK_DECLARE___FWRITING@
#  if !@HAVE___FWRITING@
extern int __fwriting (FILE *stream);
#  endif
#endif

#endif /* COMPAT_STDIO_EXT_H */
