/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_MATH_H
#define COMPAT_MATH_H

#ifdef __GNUC__
#  pragma GCC system_header
#endif

#if @HAVE_MATH_H@
#  include_next <math.h>
#endif

/* If we don't have a 'signbit' macro pray that our compiler has it builtin. */
#ifndef signbit
#  define signbit(x) __builtin_signbit (x)
#endif

#if @LIBCFUNK_DECLARE_COPYSIGN@
#  if !@HAVE_COPYSIGN@
extern double copysign (double x, double y);
#  endif
#endif

#if @LIBCFUNK_DECLARE_COPYSIGNF@
#  if !@HAVE_COPYSIGNF@
extern float copysignf (float x, float y);
#  endif
#endif

#if @LIBCFUNK_DECLARE_COPYSIGNL@
#  if !@HAVE_COPYSIGNL@
extern long double copysignl (long double x, long double y);
#  endif
#endif

#if @LIBCFUNK_DECLARE_FABS@
#  if !@HAVE_FABS@
extern double fabs (double x);
#  endif
#endif

#if @LIBCFUNK_DECLARE_FABSF@
#  if !@HAVE_FABSF@
extern float fabsf (float x);
#  endif
#endif

#if @LIBCFUNK_DECLARE_FABSL@
#  if !@HAVE_FABSL@
extern long double fabsl (long double x);
#  endif
#endif

#endif /* COMPAT_MATH_H */
