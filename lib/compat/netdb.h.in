/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_NETDB_H
#define COMPAT_NETDB_H

#ifdef __GNUC__
#  pragma GCC system_header
#endif

#if @HAVE_NETDB_H@
#  if @HAVE_INCLUDE_NEXT@
#    include_next <netdb.h>
#  else
#    include "@NETDB_H_PATH@"
#  endif
#endif

#include <sys/socket.h>
#include <netinet/in.h>

#if !@HAVE_STRUCT_HOSTENT@
struct hostent
{
  char *h_name;
  char **h_aliases;
  int h_addrtype;
  int h_length;
  char **h_addr_list;
};
#endif

#if !@HAVE_STRUCT_NETENT@
struct netent
{
  char *n_name;
  char **n_aliases;
  int n_addrtype;
  uint32_t n_net;
};
#endif

#if !@HAVE_STRUCT_PROTOENT@
struct protoent
{
  char *p_name;
  char **p_aliases;
  int p_proto;
};
#endif

#if !@HAVE_STRUCT_SERVENT@
struct servent
{
  char *s_name;
  char **s_aliases;
  int s_port;
  char *s_proto;
};
#endif

#if !@HAVE_STRUCT_ADDRINFO@
struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  socklen_t ai_addrlen;
  struct sockaddr *ai_addr;
  char *ai_canonname;
  struct addrinfo *ai_next;
};
#endif

#if @LIBCFUNK_DECLARE_GAI_STRERROR@
#  if @LIBCFUNK_REPLACE_GAI_STRERROR@
#    undef gai_strerror
#    define gai_strerror _libcfunk_gai_strerror
extern const char *_libcfunk_gai_strerror (int error_code);
#  elif !@HAVE_GAI_STRERROR@
extern const char *gai_strerror (int error_code);
#  endif
#endif

#endif /* COMPAT_NETDB_H */
