/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_NETINET_IN_H
#define COMPAT_NETINET_IN_H

#ifdef __GNUC__
#  pragma GCC system_header
#endif

#if @HAVE_NETINET_IN_H@
#  include_next <netinet/in.h>
#endif

#include <sys/types.h>
#include <sys/socket.h>

#include <stdint.h>

#ifndef INET_ADDRSTRLEN
#  define INET_ADDRSTRLEN 16
#endif

#ifndef INET6_ADDRSTRLEN
#  define INET6_ADDRSTRLEN 46
#endif

/* :: */
#ifndef IN6ADDR_ANY_INIT
#endif

/* ::1 */
#ifndef IN6ADDR_LOOPBACK_INIT
#endif

#if !@HAVE_IN_PORT_T@
typedef uint16_t in_port_t;
#endif

#if !@HAVE_IN_ADDR_T@
typedef uint32_t in_addr_t;
#endif

#if !@HAVE_STRUCT_IN_ADDR@
struct in_addr
{
  in_addr_t s_addr;
};
#endif

#if !@HAVE_STRUCT_SOCKADDR_IN@
struct sockaddr_in
{
  sa_family_t sin_family;
  in_port_t sin_port;
  struct in_addr sin_addr;
};
#endif

#if !@HAVE_STRUCT_IN6_ADDR@
typedef in6_addr
{
  uint8_t s6_addr[16];
};
#endif

#if !@HAVE_STRUCT_SOCKADDR_IN6@
struct sockaddr_in6
{
  sa_family_t sin6_family;
  in_port_t sin6_port;
  uint32_t sin6_flowinfo;
  struct in6_addr sin6_addr;
  uint32_t sin6_scope_id;
};
#endif

#endif /* COMPAT_NETINET_IN_H */
