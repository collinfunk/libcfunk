/*-
 * Copyright (c) 2023, Collin Funk
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef COMPAT_SIGNAL_H
#define COMPAT_SIGNAL_H

#ifdef __GNUC__
#  pragma GCC system_header
#endif

#if @HAVE_SIGNAL_H@
#  include_next <signal.h>
#endif

#include <sys/types.h>

#include <stddef.h>

#if @HAVE_PTHREAD_H@
#  include <pthread.h>
#endif

#if !@HAVE_SIGSET_T@
typedef unsigned int sigset_t;
#endif

#if !@HAVE_UNION_SIGVAL@
union sigval
{
  int sival_int;
  void *sival_ptr;
};
#endif

#if !@HAVE_SIGINFO_T@
typedef struct
{
  int si_signo;
  int si_code;
  int si_errno;
  pid_t si_pid;
  uid_t si_uid;
  void *si_addr;
  int si_status;
  long si_band;
  union sigval si_value;
} siginfo_t;
#endif

#if !@HAVE_STACK_T@
typedef struct
{
  void *ss_sp;
  size_t ss_size;
  int ss_flags;
} stack_t;
#endif

#if !@HAVE_STRUCT_SIGACTION@
struct sigaction
{
  void (*sa_handler) (int);
  sigset_t sa_mask;
  int sa_flags;
  void (*sa_sigaction) (int, siginfo_t *, void *);
};
#endif

#endif /* COMPAT_SIGNAL_H */
