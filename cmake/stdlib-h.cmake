
include_guard(GLOBAL)

# Generate <stdlib.h> at libcfunk-final.cmake
set(LIBCFUNK_GENERATE_STDLIB_H "1" CACHE INTERNAL "")

check_include_file("stdlib.h" HAVE_STDLIB_H)

if (HAVE_STDLIB_H)
  list(APPEND CMAKE_EXTRA_INCLUDE_FILES "stdlib.h")
  check_type_size("div_t" DIV_T)
  check_type_size("ldiv_t" LDIV_T)
  check_type_size("lldiv_t" LLDIV_T)
  list(REMOVE_ITEM CMAKE_EXTRA_INCLUDE_FILES "stdlib.h")
else ()
  set(HAVE_DIV_T "" CACHE INTERNAL "")
  set(HAVE_LDIV_T "" CACHE INTERNAL "")
  set(HAVE_LLDIV_T "" CACHE INTERNAL "")
endif ()

# Only show prototypes for checked functions.
set(LIBCFUNK_DECLARE_ABS "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_LABS "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_LLABS "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_ATOI "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_ATOL "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_ATOLL "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_BSEARCH "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_MKDTEMP "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_MKSTEMP "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_REALLOCARRAY "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_SECURE_GETENV "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_STRTOL "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_STRTOLL "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_STRTOUL "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_STRTOULL "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_C99__EXIT "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_ATEXIT "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_POSIX_OPENPT "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_UNLOCKPT "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_MALLOC "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_CALLOC "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_REALLOC "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_FREE "0" CACHE INTERNAL "")
set(LIBCFUNK_DECLARE_REALLOCF "0" CACHE INTERNAL "")

set(LIBCFUNK_REPLACE_MALLOC "0" CACHE INTERNAL "")
set(LIBCFUNK_REPLACE_CALLOC "0" CACHE INTERNAL "")
set(LIBCFUNK_REPLACE_REALLOC "0" CACHE INTERNAL "")
set(LIBCFUNK_REPLACE_FREE "0" CACHE INTERNAL "")
