
include_guard(GLOBAL)

include(CheckSymbolExists)
include(CheckFunctionExists)
include(CheckStructHasMember)
include(CheckIncludeFile)
include(CheckIncludeFiles)
include(CheckCSourceCompiles)

if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
  list(APPEND CMAKE_REQUIRED_DEFINITIONS "-D_GNU_SOURCE")
endif ()

# Cache variables for directories
set(LIBCFUNK_LIBRARY_NAME "cfunk" CACHE STRING "")
set(LIBCFUNK_SOURCE_DIR "${CMAKE_SOURCE_DIR}/lib" CACHE STRING "")
set(LIBCFUNK_TEST_SOURCE_DIR "${CMAKE_SOURCE_DIR}/tests" CACHE STRING "")
set(LIBCFUNK_BUILD_DIR "${CMAKE_BINARY_DIR}" CACHE STRING "")
set(LIBCFUNK_TEST_BUILD_DIR "${CMAKE_BINARY_DIR}" CACHE STRING "")
set(LIBCFUNK_MODULE_DIR "${CMAKE_SOURCE_DIR}/cmake" CACHE STRING "")

# Enable testing
set(LIBCFUNK_ENABLE_TESTS ON CACHE BOOL "")

add_library(${LIBCFUNK_LIBRARY_NAME})

# Set build directory for static and shared library.
set_target_properties(${LIBCFUNK_LIBRARY_NAME} PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY "${LIBCFUNK_BUILD_DIR}"
  ARCHIVE_OUTPUT_DIRECTORY "${LIBCFUNK_BUILD_DIR}"
)

# Include paths
target_include_directories("${LIBCFUNK_LIBRARY_NAME}" PUBLIC
  "${LIBCFUNK_SOURCE_DIR}"
  "${LIBCFUNK_BUILD_DIR}"
)

# Internal cache values to signal libcfunk-final needs to create headers.
set(LIBCFUNK_GENERATE_ALLOCA_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_CTYPE_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_ERR_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_ERROR_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_INTTYPES_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_MALLOC_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_STDINT_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_STDIO_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_STDLIB_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_STRING_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_STRINGS_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_SYS_RANDOM_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_SYS_TIME_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_TIME_H "0" CACHE INTERNAL "")
set(LIBCFUNK_GENERATE_UNISTD_H "0" CACHE INTERNAL "")
